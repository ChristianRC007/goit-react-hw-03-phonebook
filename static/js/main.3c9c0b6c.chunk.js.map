{"version":3,"sources":["components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["Container","children","className","ContactForm","state","name","number","handleInputChange","event","setState","currentTarget","value","handleSubmit","e","preventDefault","props","onSubmit","this","type","pattern","title","required","onChange","Component","ContactList","contacts","onDeleteContact","map","id","onClick","Filter","App","filter","addContact","contact","uuid","find","alert","prevState","deleteContact","contactId","changeFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","normalizedContact","toLowerCase","filteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c9c0b6c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactForm.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleSubmit}>\r\n        <label className=\"form__lable\">\r\n          <span className=\"form__lable__text\">Name</span>\r\n          <input\r\n            className=\"form__input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <label className=\"form__lable\">\r\n          <span className=\"form__lable__text\">Number</span>\r\n          <input\r\n            className=\"form__input\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <button className=\"form__button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = { onSubmit: PropTypes.func.isRequired };\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactList.scss';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className=\"contact-list\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className=\"contact-list__item\" key={id}>\r\n          <p>{name}:</p>\r\n          <p>{number}</p>\r\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Filter.scss';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className=\"filter\">\r\n    <span>Find contacts by name</span>\r\n    <input\r\n      className=\"filter__input\"\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { v4 as uuid } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const contact = { id: uuid(), name, number };\n\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already exist!`);\n      return;\n    }\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const normalizedContact = this.state.filter.toLowerCase();\n    const filteredContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedContact),\n    );\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}